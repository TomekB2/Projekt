{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"link-active\"];\n};\nconst _c1 = function () {\n  return {\n    exact: true\n  };\n};\nconst _c2 = function (a1) {\n  return [\"/section\", a1];\n};\nfunction HomeComponent_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 1)(1, \"li\", 2)(2, \"a\", 3);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const section_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(4, _c0))(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(5, _c1));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c2, section_r1.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(section_r1.summary);\n  }\n}\nexport class HomeComponent {\n  constructor(http, baseUrl) {\n    this.ROOT_URL = 'http://localhost:5069';\n    http.get(baseUrl + 'MOTD').subscribe(result => {\n      this.message = result;\n    }, error => console.error(error));\n  }\n  ngOnInit() {\n    let cc = window;\n    cc.cookieconsent.initialise({\n      palette: {\n        popup: {\n          background: \"#164969\"\n        },\n        button: {\n          background: \"#ffe000\",\n          text: \"#164969\"\n        }\n      },\n      theme: \"classic\",\n      content: {\n        message: \"www\",\n        dismiss: \"www\",\n        link: \"www\",\n        href: \"www\"\n      }\n    });\n  }\n  getfields() {\n    return this.http.get(this.ROOT_URL + '/Sections');\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"navbar-nav flex-grow\", 4, \"ngFor\", \"ngForOf\"], [1, \"navbar-nav\", \"flex-grow\"], [1, \"nav-item\", 3, \"routerLinkActive\", \"routerLinkActiveOptions\"], [1, \"nav-link\", \"text-dark\", 3, \"routerLink\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HomeComponent_ul_0_Template, 4, 8, \"ul\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.sections);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i3.RouterLinkActive],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;IAAAA,6BAAkE;IAIQA,YAAqB;IAAAA,iBAAI;;;;IAF7FA,eAAoC;IAApCA,6DAAoC;IAERA,eAAuC;IAAvCA,sEAAuC;IAACA,eAAqB;IAArBA,wCAAqB;;;ACgB/F,OAAM,MAAOC,aAAa;EAGxBC,YAAYC,IAAgB,EAAsBC,OAAe;IAFxD,aAAQ,GAAG,uBAAuB;IAGzCD,IAAI,CAACE,GAAG,CAAOD,OAAO,GAAG,MAAM,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAClD,IAAI,CAACC,OAAO,GAAGD,MAAM;IACvB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,QAAQ;IACN,IAAIC,EAAE,GAAGC,MAAa;IACtBD,EAAE,CAACE,aAAa,CAACC,UAAU,CAAC;MAC1BC,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,UAAU,EAAE;SACb;QACDC,MAAM,EAAE;UACND,UAAU,EAAE,SAAS;UACrBE,IAAI,EAAE;;OAET;MACDC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE;QACPd,OAAO,EAAE,KAAK;QACde,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE,KAAK;QACXC,IAAI,EAAE;;KAET,CAAC;EACJ;EAEAC,SAAS;IACP,OAAO,IAAI,CAACvB,IAAI,CAACE,GAAG,CAAC,IAAI,CAACsB,QAAQ,GAAG,WAAW,CAAC;EACnD;;AAjCW1B,aAAa;mBAAbA,aAAa,4DAGc,UAAU;AAAA;AAHrCA,aAAa;QAAbA,aAAa;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDpB1BhC,4DAMK;;;MANgDA,sCAAW","names":["i0","HomeComponent","constructor","http","baseUrl","get","subscribe","result","message","error","console","ngOnInit","cc","window","cookieconsent","initialise","palette","popup","background","button","text","theme","content","dismiss","link","href","getfields","ROOT_URL","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\home\\home.component.html","C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\home\\home.component.ts"],"sourcesContent":["<ul class=\"navbar-nav flex-grow\" *ngFor=\"let section of sections\">\r\n  <li class=\"nav-item\"\r\n      [routerLinkActive]=\"['link-active']\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\">\r\n    <a class=\"nav-link text-dark\" [routerLink]=\"['/section', section.id]\">{{ section.summary }}</a>\r\n  </li>\r\n</ul>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgcCookieConsentModule } from 'ngx-cookieconsent';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormlyModule } from '@ngx-formly/core';\r\nimport { FormlyBootstrapModule } from '@ngx-formly/bootstrap';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  readonly ROOT_URL = 'http://localhost:5069';\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<MOTD>(baseUrl + 'MOTD').subscribe(result => {\r\n      this.message = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    let cc = window as any;\r\n    cc.cookieconsent.initialise({\r\n      palette: {\r\n        popup: {\r\n          background: \"#164969\"\r\n        },\r\n        button: {\r\n          background: \"#ffe000\",\r\n          text: \"#164969\"\r\n        }\r\n      },\r\n      theme: \"classic\",\r\n      content: {\r\n        message: \"www\",\r\n        dismiss: \"www\",\r\n        link: \"www\",\r\n        href: \"www\"\r\n      }\r\n    });\r\n  }\r\n\r\n  getfields() {\r\n    return this.http.get(this.ROOT_URL + '/Sections');\r\n  }\r\n}\r\n\r\ninterface MOTD {\r\n  message: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}