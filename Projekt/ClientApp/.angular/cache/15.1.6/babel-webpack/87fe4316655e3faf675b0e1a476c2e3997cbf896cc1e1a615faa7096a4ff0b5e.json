{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nexport class SectionComponent {\n  constructor(http, baseUrl, route, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.route = route;\n    this.router = router;\n    this.fields2 = [];\n    this.fields = [];\n    this.lang = localStorage.getItem('lang') || \"en\";\n    this.form = new FormGroup({});\n    this.model = {};\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      http.get(baseUrl + 'Sections?lang=' + this.lang).subscribe(result => {\n        this.section = result;\n      }, error => console.error(error));\n    });\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    http.get(baseUrl + 'SectionField?id=' + this.id + '&lang=' + this.lang).subscribe(result => {\n      this.fields2 = result;\n      this.fields = this.fields2;\n      this.section2 = this.section[this.id].summary;\n      console.log(this.section);\n    }, error => console.error(error));\n  }\n  onSubmit(model) {\n    if (this.form.valid) {\n      if (this.id == 2) {\n        this.link = 'http://localhost:5069/' + 'Alkohol?gesPocza=' + this.form.get('gesPocza')?.getRawValue() + '&geskon=' + this.form.get('geskon')?.getRawValue();\n        this.http.post(this.link, null).subscribe(data => {\n          this.wynik2 = data.wynik;\n          this.pageField = this.form.get('wynik');\n          this.pageField.setValue(this.wynik2);\n        });\n      }\n      if (this.id == 1) {\n        this.link = 'http://localhost:5069/' + 'Nagazowanie?temp=' + this.form.get('temppiwa')?.getRawValue() + '&co=' + this.form.get('pozCO')?.getRawValue() + '&ilo=' + this.form.get('ilPiwa')?.getRawValue();\n        this.http.post(this.link, null).subscribe(data => {\n          this.wynik2 = data.wynik;\n          this.pageField = this.form.get('wynik');\n          this.pageField.setValue(this.wynik2);\n        });\n      }\n      if (this.id == 3) {\n        this.link = 'http://localhost:5069/' + 'Refraktometr?gesPocza=' + this.form.get('gesPocz')?.getRawValue() + '&gezmie=' + this.form.get('zmigest')?.getRawValue();\n        this.http.post(this.link, null).subscribe(data => {\n          this.wynik2 = data.wynik;\n          this.pageField = this.form.get('wynik');\n          this.pageField.setValue(this.wynik2);\n        });\n      }\n    }\n  }\n}\nSectionComponent.ɵfac = function SectionComponent_Factory(t) {\n  return new (t || SectionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SectionComponent,\n  selectors: [[\"app-section-component\"]],\n  decls: 7,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"form\", \"fields\", \"model\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function SectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SectionComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit(ctx.model);\n      });\n      i0.ɵɵelementStart(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"formly-form\", 1);\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵtext(6, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.section2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i4.FormlyForm, i3.FormGroupDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["FormGroup","SectionComponent","constructor","http","baseUrl","route","router","localStorage","getItem","paramMap","subscribe","params","id","get","lang","result","section","error","console","routeReuseStrategy","shouldReuseRoute","fields2","fields","section2","summary","log","onSubmit","model","form","valid","link","getRawValue","post","data","wynik2","wynik","pageField","setValue","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.ts","C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.html"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-section-component',\r\n  templateUrl: './section.component.html',\r\n})\r\nexport class SectionComponent {\r\n\r\n  public fields2: SectionFields[] = [];\r\n  public fields: FormlyFieldConfig[] = [];\r\n  public pageField: any;\r\n  public wynik2: any\r\n  public section: any;\r\n  public section2: any;\r\n  lang = localStorage.getItem('lang') || \"en\";\r\n  id: any\r\n  http2: any\r\n  paramsSubscription: any;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') public baseUrl: string, private route: ActivatedRoute, private router: Router) {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.id = params.get('id');\r\n      http.get<Sections>(baseUrl + 'Sections?lang=' + this.lang).subscribe(result => {\r\n        this.section = result\r\n      }, error => console.error(error));\r\n    });\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    http.get<SectionFields[]>(baseUrl + 'SectionField?id=' + this.id + '&lang=' + this.lang).subscribe(result => {\r\n      this.fields2 = result;\r\n      this.fields = this.fields2;\r\n      this.section2 = this.section[this.id].summary;\r\n      console.log(this.section);\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  form = new FormGroup({});\r\n  model = { };\r\n  link: any;\r\n\r\n  onSubmit(model: any) {\r\n    if (this.form.valid) {\r\n      if (this.id == 2) {\r\n        this.link = 'http://localhost:5069/' + 'Alkohol?gesPocza=' + this.form.get('gesPocza')?.getRawValue() + '&geskon=' + this.form.get('geskon')?.getRawValue();\r\n        this.http.post<Alkohol>(this.link, null).subscribe(data => {\r\n          this.wynik2 = data.wynik;\r\n          this.pageField = this.form.get('wynik');\r\n          this.pageField.setValue(this.wynik2);\r\n        });\r\n        }\r\n        if (this.id == 1) {\r\n          this.link = 'http://localhost:5069/' + 'Nagazowanie?temp=' + this.form.get('temppiwa')?.getRawValue() + '&co=' + this.form.get('pozCO')?.getRawValue() + '&ilo=' + this.form.get('ilPiwa')?.getRawValue();\r\n          this.http.post<Nagazowanie>(this.link, null).subscribe(data => {\r\n            this.wynik2 = data.wynik;\r\n            this.pageField = this.form.get('wynik');\r\n            this.pageField.setValue(this.wynik2);\r\n          });\r\n        }\r\n        if (this.id == 3) {\r\n          this.link = 'http://localhost:5069/' + 'Refraktometr?gesPocza=' + this.form.get('gesPocz')?.getRawValue() + '&gezmie=' + this.form.get('zmigest')?.getRawValue()\r\n          this.http.post<Refraktometr>(this.link, null).subscribe(data => {\r\n            this.wynik2 = data.wynik;\r\n            this.pageField = this.form.get('wynik');\r\n            this.pageField.setValue(this.wynik2);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\ninterface SectionFields {\r\n  key: string;\r\n  type: string;\r\n  templateOptions: TemplateOptions;\r\n}\r\ninterface TemplateOptions {\r\n  type: string;\r\n  label: string;\r\n  placeholder: string;\r\n  required: boolean;\r\n}\r\ninterface Alkohol {\r\n  wynik: number;\r\n}\r\ninterface Nagazowanie {\r\n  wynik: number;\r\n}\r\n\r\ninterface Refraktometr {\r\n  wynik: number;\r\n}\r\ninterface Sections {\r\n  id: number;\r\n  summary: string;\r\n  type: string;\r\n}\r\n\r\n","<html>\r\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(model)\">\r\n  <h1>{{ section2 }}</h1>\r\n  <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\r\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!form.valid\">Submit</button>\r\n</form>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}