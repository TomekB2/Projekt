{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\nfunction FormlyFieldCheckbox_ng_template_0_label_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵtext(1, \"*\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormlyFieldCheckbox_ng_template_0_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, FormlyFieldCheckbox_ng_template_0_label_2_span_2_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"for\", ctx_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.props.label, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.props.required && ctx_r2.props.hideRequiredMarker !== true);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"form-check-inline\": a0,\n    \"form-switch\": a1\n  };\n};\nfunction FormlyFieldCheckbox_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"input\", 2);\n    i0.ɵɵtemplate(2, FormlyFieldCheckbox_ng_template_0_label_2_Template, 3, 3, \"label\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c0, ctx_r1.props.formCheck === \"inline\" || ctx_r1.props.formCheck === \"inline-switch\", ctx_r1.props.formCheck === \"switch\" || ctx_r1.props.formCheck === \"inline-switch\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r1.showError)(\"position-static\", ctx_r1.props.formCheck === \"nolabel\");\n    i0.ɵɵproperty(\"indeterminate\", ctx_r1.props.indeterminate && ctx_r1.formControl.value == null)(\"formControl\", ctx_r1.formControl)(\"formlyAttributes\", ctx_r1.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.props.formCheck !== \"nolabel\");\n  }\n}\nclass FormlyFieldCheckbox extends FieldType {\n  constructor() {\n    super(...arguments);\n    this.defaultOptions = {\n      props: {\n        indeterminate: true,\n        hideLabel: true,\n        formCheck: 'default'\n      }\n    };\n  }\n}\nFormlyFieldCheckbox.ɵfac = /* @__PURE__ */function () {\n  let ɵFormlyFieldCheckbox_BaseFactory;\n  return function FormlyFieldCheckbox_Factory(t) {\n    return (ɵFormlyFieldCheckbox_BaseFactory || (ɵFormlyFieldCheckbox_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldCheckbox)))(t || FormlyFieldCheckbox);\n  };\n}();\nFormlyFieldCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldCheckbox,\n  selectors: [[\"formly-field-checkbox\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"fieldTypeTemplate\", \"\"], [1, \"form-check\", 3, \"ngClass\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"indeterminate\", \"formControl\", \"formlyAttributes\"], [\"class\", \"form-check-label\", 3, \"for\", 4, \"ngIf\"], [1, \"form-check-label\", 3, \"for\"], [\"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\"]],\n  template: function FormlyFieldCheckbox_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormlyFieldCheckbox_ng_template_0_Template, 3, 12, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  dependencies: [i1.NgClass, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-checkbox',\n      template: `\n    <ng-template #fieldTypeTemplate>\n      <div\n        class=\"form-check\"\n        [ngClass]=\"{\n          'form-check-inline': props.formCheck === 'inline' || props.formCheck === 'inline-switch',\n          'form-switch': props.formCheck === 'switch' || props.formCheck === 'inline-switch'\n        }\"\n      >\n        <input\n          type=\"checkbox\"\n          [class.is-invalid]=\"showError\"\n          class=\"form-check-input\"\n          [class.position-static]=\"props.formCheck === 'nolabel'\"\n          [indeterminate]=\"props.indeterminate && formControl.value == null\"\n          [formControl]=\"formControl\"\n          [formlyAttributes]=\"field\"\n        />\n        <label *ngIf=\"props.formCheck !== 'nolabel'\" [for]=\"id\" class=\"form-check-label\">\n          {{ props.label }}\n          <span *ngIf=\"props.required && props.hideRequiredMarker !== true\" aria-hidden=\"true\">*</span>\n        </label>\n      </div>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\nclass FormlyBootstrapCheckboxModule {}\nFormlyBootstrapCheckboxModule.ɵfac = function FormlyBootstrapCheckboxModule_Factory(t) {\n  return new (t || FormlyBootstrapCheckboxModule)();\n};\nFormlyBootstrapCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyBootstrapCheckboxModule\n});\nFormlyBootstrapCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlyModule.forChild({\n    types: [{\n      name: 'checkbox',\n      component: FormlyFieldCheckbox,\n      wrappers: ['form-field']\n    }, {\n      name: 'boolean',\n      extends: 'checkbox'\n    }]\n  })]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyBootstrapCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldCheckbox],\n      imports: [CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlyModule.forChild({\n        types: [{\n          name: 'checkbox',\n          component: FormlyFieldCheckbox,\n          wrappers: ['form-field']\n        }, {\n          name: 'boolean',\n          extends: 'checkbox'\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyBootstrapCheckboxModule, FormlyFieldCheckbox };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","NgModule","i1","CommonModule","i3","FormlyModule","i2","ReactiveFormsModule","FieldType","FormlyBootstrapFormFieldModule","FormlyFieldCheckbox","constructor","arguments","defaultOptions","props","indeterminate","hideLabel","formCheck","ɵfac","ɵcmp","NgClass","CheckboxControlValueAccessor","NgControlStatus","FormControlDirective","ɵFormlyAttributes","NgIf","type","args","selector","template","changeDetection","OnPush","FormlyBootstrapCheckboxModule","ɵmod","ɵinj","forChild","types","name","component","wrappers","extends","declarations","imports"],"sources":["C:/Users/tomas/OneDrive/Pulpit/sparwd/Projekt/Projekt/ClientApp/node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap-checkbox.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\n\nclass FormlyFieldCheckbox extends FieldType {\n    constructor() {\n        super(...arguments);\n        this.defaultOptions = {\n            props: {\n                indeterminate: true,\n                hideLabel: true,\n                formCheck: 'default',\n            },\n        };\n    }\n}\nFormlyFieldCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldCheckbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFormlyFieldCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FormlyFieldCheckbox, selector: \"formly-field-checkbox\", usesInheritance: true, ngImport: i0, template: `\n    <ng-template #fieldTypeTemplate>\n      <div\n        class=\"form-check\"\n        [ngClass]=\"{\n          'form-check-inline': props.formCheck === 'inline' || props.formCheck === 'inline-switch',\n          'form-switch': props.formCheck === 'switch' || props.formCheck === 'inline-switch'\n        }\"\n      >\n        <input\n          type=\"checkbox\"\n          [class.is-invalid]=\"showError\"\n          class=\"form-check-input\"\n          [class.position-static]=\"props.formCheck === 'nolabel'\"\n          [indeterminate]=\"props.indeterminate && formControl.value == null\"\n          [formControl]=\"formControl\"\n          [formlyAttributes]=\"field\"\n        />\n        <label *ngIf=\"props.formCheck !== 'nolabel'\" [for]=\"id\" class=\"form-check-label\">\n          {{ props.label }}\n          <span *ngIf=\"props.required && props.hideRequiredMarker !== true\" aria-hidden=\"true\">*</span>\n        </label>\n      </div>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i3.ɵFormlyAttributes, selector: \"[formlyAttributes]\", inputs: [\"formlyAttributes\", \"id\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'formly-field-checkbox',\n                    template: `\n    <ng-template #fieldTypeTemplate>\n      <div\n        class=\"form-check\"\n        [ngClass]=\"{\n          'form-check-inline': props.formCheck === 'inline' || props.formCheck === 'inline-switch',\n          'form-switch': props.formCheck === 'switch' || props.formCheck === 'inline-switch'\n        }\"\n      >\n        <input\n          type=\"checkbox\"\n          [class.is-invalid]=\"showError\"\n          class=\"form-check-input\"\n          [class.position-static]=\"props.formCheck === 'nolabel'\"\n          [indeterminate]=\"props.indeterminate && formControl.value == null\"\n          [formControl]=\"formControl\"\n          [formlyAttributes]=\"field\"\n        />\n        <label *ngIf=\"props.formCheck !== 'nolabel'\" [for]=\"id\" class=\"form-check-label\">\n          {{ props.label }}\n          <span *ngIf=\"props.required && props.hideRequiredMarker !== true\" aria-hidden=\"true\">*</span>\n        </label>\n      </div>\n    </ng-template>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass FormlyBootstrapCheckboxModule {\n}\nFormlyBootstrapCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormlyBootstrapCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapCheckboxModule, declarations: [FormlyFieldCheckbox], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormlyBootstrapFormFieldModule, i3.FormlyModule] });\nFormlyBootstrapCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapCheckboxModule, imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            FormlyBootstrapFormFieldModule,\n            FormlyModule.forChild({\n                types: [\n                    {\n                        name: 'checkbox',\n                        component: FormlyFieldCheckbox,\n                        wrappers: ['form-field'],\n                    },\n                    {\n                        name: 'boolean',\n                        extends: 'checkbox',\n                    },\n                ],\n            }),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FormlyFieldCheckbox],\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        FormlyBootstrapFormFieldModule,\n                        FormlyModule.forChild({\n                            types: [\n                                {\n                                    name: 'checkbox',\n                                    component: FormlyFieldCheckbox,\n                                    wrappers: ['form-field'],\n                                },\n                                {\n                                    name: 'boolean',\n                                    extends: 'checkbox',\n                                },\n                            ],\n                        }),\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyBootstrapCheckboxModule, FormlyFieldCheckbox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}