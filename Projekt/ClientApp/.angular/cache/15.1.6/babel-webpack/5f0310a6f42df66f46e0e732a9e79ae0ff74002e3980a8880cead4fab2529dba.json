{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { SelectControlValueAccessor, ReactiveFormsModule } from '@angular/forms';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i4 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\nimport { take } from 'rxjs/operators';\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngValue\", opt_r8.value)(\"disabled\", opt_r8.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", opt_r8.label, \" \");\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", child_r14.value)(\"disabled\", child_r14.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", child_r14.label, \" \");\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"optgroup\", 9);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_option_1_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r8 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", opt_r8.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opt_r8.group);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_option_1_Template, 2, 3, \"option\", 6);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_ng_template_2_Template, 2, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const opt_r8 = ctx.$implicit;\n    const _r10 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !opt_r8.group)(\"ngIfElse\", _r10);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_select_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_ng_container_1_Template, 4, 2, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const opts_r6 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opts_r6);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_select_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 3);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_select_0_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵpipe(3, \"formlySelectOptions\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r2.showError);\n    i0.ɵɵproperty(\"formControl\", ctx_r2.formControl)(\"compareWith\", ctx_r2.props.compareWith)(\"formlyAttributes\", ctx_r2.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 6, i0.ɵɵpipeBind2(3, 8, ctx_r2.props.options, ctx_r2.field)));\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngValue\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.props.placeholder);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngValue\", opt_r20.value)(\"disabled\", opt_r20.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", opt_r20.label, \" \");\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", child_r26.value)(\"disabled\", child_r26.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", child_r26.label, \" \");\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"optgroup\", 9);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_option_1_Template, 2, 3, \"option\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const opt_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", opt_r20.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opt_r20.group);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_option_1_Template, 2, 3, \"option\", 6);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_ng_template_2_Template, 2, 2, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const opt_r20 = ctx.$implicit;\n    const _r22 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !opt_r20.group)(\"ngIfElse\", _r22);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_ng_container_1_Template, 4, 2, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const opts_r18 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", opts_r18);\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 11);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_option_1_Template, 2, 2, \"option\", 12);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_template_0_ng_template_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵpipe(4, \"formlySelectOptions\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r4.showError);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.formControl)(\"compareWith\", ctx_r4.props.compareWith)(\"formlyAttributes\", ctx_r4.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.props.placeholder);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 7, i0.ɵɵpipeBind2(4, 9, ctx_r4.props.options, ctx_r4.field)));\n  }\n}\nfunction FormlyFieldSelect_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_0_select_0_Template, 4, 11, \"select\", 1);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_template_0_ng_template_1_Template, 5, 12, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(2);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.props.multiple)(\"ngIfElse\", _r3);\n  }\n}\nclass FormlyFieldSelect extends FieldType {\n  constructor(ngZone, hostContainerRef) {\n    super(hostContainerRef);\n    this.ngZone = ngZone;\n    this.defaultOptions = {\n      props: {\n        compareWith(o1, o2) {\n          return o1 === o2;\n        }\n      }\n    };\n  }\n  // workaround for https://github.com/angular/angular/issues/10010\n  /**\n   * TODO: Check if this is still needed\n   */\n  set selectAccessor(s) {\n    if (!s) {\n      return;\n    }\n    const writeValue = s.writeValue.bind(s);\n    if (s._getOptionId(s.value) === null) {\n      writeValue(s.value);\n    }\n    s.writeValue = value => {\n      const id = s._idCounter;\n      writeValue(value);\n      if (value === null) {\n        this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n          if (id !== s._idCounter && s._getOptionId(value) === null && s._elementRef.nativeElement.selectedIndex !== -1) {\n            writeValue(value);\n          }\n        });\n      }\n    };\n  }\n}\nFormlyFieldSelect.ɵfac = function FormlyFieldSelect_Factory(t) {\n  return new (t || FormlyFieldSelect)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nFormlyFieldSelect.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldSelect,\n  selectors: [[\"formly-field-select\"]],\n  viewQuery: function FormlyFieldSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(SelectControlValueAccessor, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.selectAccessor = _t.first);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"fieldTypeTemplate\", \"\"], [\"class\", \"form-select\", \"multiple\", \"\", 3, \"formControl\", \"compareWith\", \"is-invalid\", \"formlyAttributes\", 4, \"ngIf\", \"ngIfElse\"], [\"singleSelect\", \"\"], [\"multiple\", \"\", 1, \"form-select\", 3, \"formControl\", \"compareWith\", \"formlyAttributes\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\", \"disabled\", 4, \"ngIf\", \"ngIfElse\"], [\"optgroup\", \"\"], [3, \"ngValue\", \"disabled\"], [3, \"label\"], [3, \"ngValue\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-select\", 3, \"formControl\", \"compareWith\", \"formlyAttributes\"], [3, \"ngValue\", 4, \"ngIf\"], [3, \"ngValue\"]],\n  template: function FormlyFieldSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  dependencies: [i1.NgIf, i2.SelectMultipleControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i1.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i1.AsyncPipe, i4.FormlySelectOptionsPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldSelect, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-select',\n      template: `\n    <ng-template #fieldTypeTemplate>\n      <select\n        *ngIf=\"props.multiple; else singleSelect\"\n        class=\"form-select\"\n        multiple\n        [formControl]=\"formControl\"\n        [compareWith]=\"props.compareWith\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\"\n      >\n        <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as opts\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">\n              {{ opt.label }}\n            </option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n      </select>\n\n      <ng-template #singleSelect>\n        <select\n          class=\"form-select\"\n          [formControl]=\"formControl\"\n          [compareWith]=\"props.compareWith\"\n          [class.is-invalid]=\"showError\"\n          [formlyAttributes]=\"field\"\n        >\n          <option *ngIf=\"props.placeholder\" [ngValue]=\"undefined\">{{ props.placeholder }}</option>\n          <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as opts\">\n            <ng-container *ngFor=\"let opt of opts\">\n              <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">\n                {{ opt.label }}\n              </option>\n              <ng-template #optgroup>\n                <optgroup [label]=\"opt.label\">\n                  <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                    {{ child.label }}\n                  </option>\n                </optgroup>\n              </ng-template>\n            </ng-container>\n          </ng-container>\n        </select>\n      </ng-template>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ViewContainerRef\n    }];\n  }, {\n    selectAccessor: [{\n      type: ViewChild,\n      args: [SelectControlValueAccessor]\n    }]\n  });\n})();\nclass FormlyBootstrapSelectModule {}\nFormlyBootstrapSelectModule.ɵfac = function FormlyBootstrapSelectModule_Factory(t) {\n  return new (t || FormlyBootstrapSelectModule)();\n};\nFormlyBootstrapSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyBootstrapSelectModule\n});\nFormlyBootstrapSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n    types: [{\n      name: 'select',\n      component: FormlyFieldSelect,\n      wrappers: ['form-field']\n    }, {\n      name: 'enum',\n      extends: 'select'\n    }]\n  })]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyBootstrapSelectModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldSelect],\n      imports: [CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n        types: [{\n          name: 'select',\n          component: FormlyFieldSelect,\n          wrappers: ['form-field']\n        }, {\n          name: 'enum',\n          extends: 'select'\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyBootstrapSelectModule, FormlyFieldSelect };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","ViewChild","NgModule","i1","CommonModule","i2","SelectControlValueAccessor","ReactiveFormsModule","i3","FormlyModule","i4","FormlySelectModule","FieldType","FormlyBootstrapFormFieldModule","take","FormlyFieldSelect","constructor","ngZone","hostContainerRef","defaultOptions","props","compareWith","o1","o2","selectAccessor","s","writeValue","bind","_getOptionId","value","id","_idCounter","onStable","asObservable","pipe","subscribe","_elementRef","nativeElement","selectedIndex","ɵfac","NgZone","ViewContainerRef","ɵcmp","NgIf","SelectMultipleControlValueAccessor","NgControlStatus","FormControlDirective","ɵFormlyAttributes","NgForOf","NgSelectOption","ɵNgSelectMultipleOption","AsyncPipe","FormlySelectOptionsPipe","type","args","selector","template","changeDetection","OnPush","FormlyBootstrapSelectModule","ɵmod","ɵinj","forChild","types","name","component","wrappers","extends","declarations","imports"],"sources":["C:/Users/tomas/OneDrive/Pulpit/sparwd/Projekt/Projekt/ClientApp/node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap-select.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { SelectControlValueAccessor, ReactiveFormsModule } from '@angular/forms';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i4 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\nimport { take } from 'rxjs/operators';\n\nclass FormlyFieldSelect extends FieldType {\n    constructor(ngZone, hostContainerRef) {\n        super(hostContainerRef);\n        this.ngZone = ngZone;\n        this.defaultOptions = {\n            props: {\n                compareWith(o1, o2) {\n                    return o1 === o2;\n                },\n            },\n        };\n    }\n    // workaround for https://github.com/angular/angular/issues/10010\n    /**\n     * TODO: Check if this is still needed\n     */\n    set selectAccessor(s) {\n        if (!s) {\n            return;\n        }\n        const writeValue = s.writeValue.bind(s);\n        if (s._getOptionId(s.value) === null) {\n            writeValue(s.value);\n        }\n        s.writeValue = (value) => {\n            const id = s._idCounter;\n            writeValue(value);\n            if (value === null) {\n                this.ngZone.onStable\n                    .asObservable()\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    if (id !== s._idCounter &&\n                        s._getOptionId(value) === null &&\n                        s._elementRef.nativeElement.selectedIndex !== -1) {\n                        writeValue(value);\n                    }\n                });\n            }\n        };\n    }\n}\nFormlyFieldSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldSelect, deps: [{ token: i0.NgZone }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nFormlyFieldSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FormlyFieldSelect, selector: \"formly-field-select\", viewQueries: [{ propertyName: \"selectAccessor\", first: true, predicate: SelectControlValueAccessor, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <ng-template #fieldTypeTemplate>\n      <select\n        *ngIf=\"props.multiple; else singleSelect\"\n        class=\"form-select\"\n        multiple\n        [formControl]=\"formControl\"\n        [compareWith]=\"props.compareWith\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\"\n      >\n        <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as opts\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">\n              {{ opt.label }}\n            </option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n      </select>\n\n      <ng-template #singleSelect>\n        <select\n          class=\"form-select\"\n          [formControl]=\"formControl\"\n          [compareWith]=\"props.compareWith\"\n          [class.is-invalid]=\"showError\"\n          [formlyAttributes]=\"field\"\n        >\n          <option *ngIf=\"props.placeholder\" [ngValue]=\"undefined\">{{ props.placeholder }}</option>\n          <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as opts\">\n            <ng-container *ngFor=\"let opt of opts\">\n              <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">\n                {{ opt.label }}\n              </option>\n              <ng-template #optgroup>\n                <optgroup [label]=\"opt.label\">\n                  <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                    {{ child.label }}\n                  </option>\n                </optgroup>\n              </ng-template>\n            </ng-container>\n          </ng-container>\n        </select>\n      </ng-template>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.SelectMultipleControlValueAccessor, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: [\"compareWith\"] }, { type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i3.ɵFormlyAttributes, selector: \"[formlyAttributes]\", inputs: [\"formlyAttributes\", \"id\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { type: i2.SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: [\"compareWith\"] }], pipes: { \"async\": i1.AsyncPipe, \"formlySelectOptions\": i4.FormlySelectOptionsPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldSelect, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'formly-field-select',\n                    template: `\n    <ng-template #fieldTypeTemplate>\n      <select\n        *ngIf=\"props.multiple; else singleSelect\"\n        class=\"form-select\"\n        multiple\n        [formControl]=\"formControl\"\n        [compareWith]=\"props.compareWith\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\"\n      >\n        <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as opts\">\n          <ng-container *ngFor=\"let opt of opts\">\n            <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">\n              {{ opt.label }}\n            </option>\n            <ng-template #optgroup>\n              <optgroup [label]=\"opt.label\">\n                <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                  {{ child.label }}\n                </option>\n              </optgroup>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n      </select>\n\n      <ng-template #singleSelect>\n        <select\n          class=\"form-select\"\n          [formControl]=\"formControl\"\n          [compareWith]=\"props.compareWith\"\n          [class.is-invalid]=\"showError\"\n          [formlyAttributes]=\"field\"\n        >\n          <option *ngIf=\"props.placeholder\" [ngValue]=\"undefined\">{{ props.placeholder }}</option>\n          <ng-container *ngIf=\"props.options | formlySelectOptions : field | async as opts\">\n            <ng-container *ngFor=\"let opt of opts\">\n              <option *ngIf=\"!opt.group; else optgroup\" [ngValue]=\"opt.value\" [disabled]=\"opt.disabled\">\n                {{ opt.label }}\n              </option>\n              <ng-template #optgroup>\n                <optgroup [label]=\"opt.label\">\n                  <option *ngFor=\"let child of opt.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n                    {{ child.label }}\n                  </option>\n                </optgroup>\n              </ng-template>\n            </ng-container>\n          </ng-container>\n        </select>\n      </ng-template>\n    </ng-template>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ViewContainerRef }]; }, propDecorators: { selectAccessor: [{\n                type: ViewChild,\n                args: [SelectControlValueAccessor]\n            }] } });\n\nclass FormlyBootstrapSelectModule {\n}\nFormlyBootstrapSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormlyBootstrapSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapSelectModule, declarations: [FormlyFieldSelect], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormlyBootstrapFormFieldModule,\n        FormlySelectModule, i3.FormlyModule] });\nFormlyBootstrapSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapSelectModule, imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            FormlyBootstrapFormFieldModule,\n            FormlySelectModule,\n            FormlyModule.forChild({\n                types: [\n                    {\n                        name: 'select',\n                        component: FormlyFieldSelect,\n                        wrappers: ['form-field'],\n                    },\n                    { name: 'enum', extends: 'select' },\n                ],\n            }),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FormlyFieldSelect],\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        FormlyBootstrapFormFieldModule,\n                        FormlySelectModule,\n                        FormlyModule.forChild({\n                            types: [\n                                {\n                                    name: 'select',\n                                    component: FormlyFieldSelect,\n                                    wrappers: ['form-field'],\n                                },\n                                { name: 'enum', extends: 'select' },\n                            ],\n                        }),\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyBootstrapSelectModule, FormlyFieldSelect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}