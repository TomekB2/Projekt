{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nexport class SectionComponent {\n  constructor(http, baseUrl, route) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.route = route;\n    this.fields2 = [];\n    this.fields = [];\n    this.id = 0;\n    this.form = new FormGroup({});\n    this.model = {};\n    // this.sub = this.route.params.subscribe(params => {\n    //   this.id = +params['id'];\n    // });\n    // http.get<SectionFields[]>(baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\n    //   this.fields2 = result;\n    //  this.fields = this.fields2;\n    // }, error => console.error(error));\n  }\n\n  ngOnInit() {\n    this.paramsSubscription = this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\n    });\n\n    this.http.get(this.baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\n      this.fields2 = result;\n      this.fields = this.fields2;\n    }, error => console.error(error));\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    this.http.unsubscribe();\n  }\n  onSubmit(model) {\n    console.log(this.fields2);\n  }\n}\nSectionComponent.ɵfac = function SectionComponent_Factory(t) {\n  return new (t || SectionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SectionComponent,\n  selectors: [[\"app-section-component\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"form\", \"fields\", \"model\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\"]],\n  template: function SectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SectionComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit(ctx.model);\n      });\n      i0.ɵɵelement(1, \"formly-form\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i4.FormlyForm, i3.FormGroupDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,QAAQ,gBAAgB;;;;;;AAS1C,OAAM,MAAOC,gBAAgB;EAQ3BC,YAAoBC,IAAgB,EAA8BC,OAAe,EAAUC,KAAqB;IAA5F,SAAI,GAAJF,IAAI;IAA0C,YAAO,GAAPC,OAAO;IAAkB,UAAK,GAALC,KAAK;IANzF,YAAO,GAAoB,EAAE;IAC7B,WAAM,GAAwB,EAAE;IACvC,OAAE,GAAG,CAAC;IA6BN,SAAI,GAAG,IAAIL,SAAS,CAAC,EAAE,CAAC;IACxB,UAAK,GAAG,EAAE;IAzBT;IACA;IACA;IACA;IACA;IACC;IACD;EACD;;EAEAM,QAAQ;IACN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MAC7D,IAAI,CAACE,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;;IACF,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAkB,IAAI,CAACP,OAAO,GAAG,kBAAkB,GAAG,IAAI,CAACM,EAAE,CAAC,CAACD,SAAS,CAACG,MAAM,IAAG;MAC7F,IAAI,CAACC,OAAO,GAAGD,MAAM;MACrB,IAAI,CAACE,MAAM,GAAG,IAAI,CAACD,OAAO;IAC5B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,WAAW;IACT,IAAI,CAACC,GAAG,CAACC,WAAW,EAAE;IACtB,IAAI,CAAChB,IAAI,CAACgB,WAAW,EAAE;EACzB;EAKAC,QAAQ,CAACC,KAAU;IACjBL,OAAO,CAACM,GAAG,CAAC,IAAI,CAACT,OAAO,CAAC;EAC3B;;AAtCWZ,gBAAgB;mBAAhBA,gBAAgB,4DAQmB,UAAU;AAAA;AAR7CA,gBAAgB;QAAhBA,gBAAgB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ7BC,+BAAsD;MAA7BA;QAAA,OAAYC,uBAAe;MAAA,EAAC;MACnDD,iCAA2E;MAC3EA,iCAA8C;MAAAA,sBAAM;MAAAA,iBAAS;;;MAFzDA,oCAAkB;MACTA,eAAa;MAAbA,+BAAa","names":["FormGroup","SectionComponent","constructor","http","baseUrl","route","ngOnInit","paramsSubscription","params","subscribe","id","get","result","fields2","fields","error","console","ngOnDestroy","sub","unsubscribe","onSubmit","model","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.ts","C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.html"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-section-component',\r\n  templateUrl: './section.component.html',\r\n})\r\nexport class SectionComponent implements OnInit, OnDestroy {\r\n\r\n  public fields2: SectionFields[] = [];\r\n  public fields: FormlyFieldConfig[] = [];\r\n  id = 0;\r\n  private sub: any;\r\n  paramsSubscription: Subscription;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private route: ActivatedRoute) {\r\n   // this.sub = this.route.params.subscribe(params => {\r\n   //   this.id = +params['id'];\r\n   // });\r\n   // http.get<SectionFields[]>(baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\r\n   //   this.fields2 = result;\r\n    //  this.fields = this.fields2;\r\n   // }, error => console.error(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.paramsSubscription = this.route.params.subscribe(params => {\r\n      this.id = +params['id']; // (+) converts string 'id' to a number\r\n    });\r\n    this.http.get<SectionFields[]>(this.baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\r\n      this.fields2 = result;\r\n      this.fields = this.fields2;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n    this.http.unsubscribe();\r\n  }\r\n\r\n  form = new FormGroup({});\r\n  model = {};\r\n \r\n  onSubmit(model: any) {\r\n    console.log(this.fields2);\r\n  }\r\n}\r\n\r\ninterface SectionFields {\r\n  key: string;\r\n  type: string;\r\n  templateOptions: TemplateOptions;\r\n}\r\ninterface TemplateOptions {\r\n  type: string;\r\n  label: string;\r\n  placeholder: string;\r\n  required: boolean;\r\n}\r\n\r\n\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(model)\">\r\n  <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\r\n  <button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}