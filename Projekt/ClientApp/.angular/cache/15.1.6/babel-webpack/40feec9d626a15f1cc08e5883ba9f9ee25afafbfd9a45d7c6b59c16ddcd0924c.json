{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\nfunction FormlyFieldInput_ng_template_0_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r2.showError);\n    i0.ɵɵproperty(\"type\", ctx_r2.type)(\"formControl\", ctx_r2.formControl)(\"formlyAttributes\", ctx_r2.field);\n  }\n}\nfunction FormlyFieldInput_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r4.showError);\n    i0.ɵɵproperty(\"formControl\", ctx_r4.formControl)(\"formlyAttributes\", ctx_r4.field);\n  }\n}\nfunction FormlyFieldInput_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, FormlyFieldInput_ng_template_0_input_0_Template, 1, 5, \"input\", 1);\n    i0.ɵɵtemplate(1, FormlyFieldInput_ng_template_0_ng_template_1_Template, 1, 4, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(2);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.type !== \"number\")(\"ngIfElse\", _r3);\n  }\n}\nclass FormlyFieldInput extends FieldType {\n  get type() {\n    return this.props.type || 'text';\n  }\n}\nFormlyFieldInput.ɵfac = /* @__PURE__ */function () {\n  let ɵFormlyFieldInput_BaseFactory;\n  return function FormlyFieldInput_Factory(t) {\n    return (ɵFormlyFieldInput_BaseFactory || (ɵFormlyFieldInput_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldInput)))(t || FormlyFieldInput);\n  };\n}();\nFormlyFieldInput.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FormlyFieldInput,\n  selectors: [[\"formly-field-input\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"fieldTypeTemplate\", \"\"], [\"class\", \"form-control\", 3, \"type\", \"formControl\", \"formlyAttributes\", \"is-invalid\", 4, \"ngIf\", \"ngIfElse\"], [\"numberTmp\", \"\"], [1, \"form-control\", 3, \"type\", \"formControl\", \"formlyAttributes\"], [\"type\", \"number\", 1, \"form-control\", 3, \"formControl\", \"formlyAttributes\"]],\n  template: function FormlyFieldInput_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FormlyFieldInput_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.ɵFormlyAttributes, i2.NumberValueAccessor],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyFieldInput, [{\n    type: Component,\n    args: [{\n      selector: 'formly-field-input',\n      template: `\n    <ng-template #fieldTypeTemplate>\n      <input\n        *ngIf=\"type !== 'number'; else numberTmp\"\n        [type]=\"type\"\n        [formControl]=\"formControl\"\n        class=\"form-control\"\n        [formlyAttributes]=\"field\"\n        [class.is-invalid]=\"showError\"\n      />\n      <ng-template #numberTmp>\n        <input\n          type=\"number\"\n          [formControl]=\"formControl\"\n          class=\"form-control\"\n          [formlyAttributes]=\"field\"\n          [class.is-invalid]=\"showError\"\n        />\n      </ng-template>\n    </ng-template>\n  `,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, null);\n})();\nclass FormlyBootstrapInputModule {}\nFormlyBootstrapInputModule.ɵfac = function FormlyBootstrapInputModule_Factory(t) {\n  return new (t || FormlyBootstrapInputModule)();\n};\nFormlyBootstrapInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlyBootstrapInputModule\n});\nFormlyBootstrapInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlyModule.forChild({\n    types: [{\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['form-field']\n    }, {\n      name: 'string',\n      extends: 'input'\n    }, {\n      name: 'number',\n      extends: 'input',\n      defaultOptions: {\n        props: {\n          type: 'number'\n        }\n      }\n    }, {\n      name: 'integer',\n      extends: 'input',\n      defaultOptions: {\n        props: {\n          type: 'number'\n        }\n      }\n    }]\n  })]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlyBootstrapInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlyFieldInput],\n      imports: [CommonModule, ReactiveFormsModule, FormlyBootstrapFormFieldModule, FormlyModule.forChild({\n        types: [{\n          name: 'input',\n          component: FormlyFieldInput,\n          wrappers: ['form-field']\n        }, {\n          name: 'string',\n          extends: 'input'\n        }, {\n          name: 'number',\n          extends: 'input',\n          defaultOptions: {\n            props: {\n              type: 'number'\n            }\n          }\n        }, {\n          name: 'integer',\n          extends: 'input',\n          defaultOptions: {\n            props: {\n              type: 'number'\n            }\n          }\n        }]\n      })]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyBootstrapInputModule, FormlyFieldInput };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","NgModule","i1","CommonModule","i3","FormlyModule","i2","ReactiveFormsModule","FieldType","FormlyBootstrapFormFieldModule","FormlyFieldInput","type","props","ɵfac","ɵcmp","NgIf","DefaultValueAccessor","NgControlStatus","FormControlDirective","ɵFormlyAttributes","NumberValueAccessor","args","selector","template","changeDetection","OnPush","FormlyBootstrapInputModule","ɵmod","ɵinj","forChild","types","name","component","wrappers","extends","defaultOptions","declarations","imports"],"sources":["C:/Users/tomas/OneDrive/Pulpit/sparwd/Projekt/Projekt/ClientApp/node_modules/@ngx-formly/bootstrap/fesm2020/ngx-formly-bootstrap-input.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i2 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FieldType, FormlyBootstrapFormFieldModule } from '@ngx-formly/bootstrap/form-field';\n\nclass FormlyFieldInput extends FieldType {\n    get type() {\n        return this.props.type || 'text';\n    }\n}\nFormlyFieldInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldInput, deps: null, target: i0.ɵɵFactoryTarget.Component });\nFormlyFieldInput.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: FormlyFieldInput, selector: \"formly-field-input\", usesInheritance: true, ngImport: i0, template: `\n    <ng-template #fieldTypeTemplate>\n      <input\n        *ngIf=\"type !== 'number'; else numberTmp\"\n        [type]=\"type\"\n        [formControl]=\"formControl\"\n        class=\"form-control\"\n        [formlyAttributes]=\"field\"\n        [class.is-invalid]=\"showError\"\n      />\n      <ng-template #numberTmp>\n        <input\n          type=\"number\"\n          [formControl]=\"formControl\"\n          class=\"form-control\"\n          [formlyAttributes]=\"field\"\n          [class.is-invalid]=\"showError\"\n        />\n      </ng-template>\n    </ng-template>\n  `, isInline: true, directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2.FormControlDirective, selector: \"[formControl]\", inputs: [\"formControl\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"], exportAs: [\"ngForm\"] }, { type: i3.ɵFormlyAttributes, selector: \"[formlyAttributes]\", inputs: [\"formlyAttributes\", \"id\"] }, { type: i2.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyFieldInput, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'formly-field-input',\n                    template: `\n    <ng-template #fieldTypeTemplate>\n      <input\n        *ngIf=\"type !== 'number'; else numberTmp\"\n        [type]=\"type\"\n        [formControl]=\"formControl\"\n        class=\"form-control\"\n        [formlyAttributes]=\"field\"\n        [class.is-invalid]=\"showError\"\n      />\n      <ng-template #numberTmp>\n        <input\n          type=\"number\"\n          [formControl]=\"formControl\"\n          class=\"form-control\"\n          [formlyAttributes]=\"field\"\n          [class.is-invalid]=\"showError\"\n        />\n      </ng-template>\n    </ng-template>\n  `,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }] });\n\nclass FormlyBootstrapInputModule {\n}\nFormlyBootstrapInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormlyBootstrapInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapInputModule, declarations: [FormlyFieldInput], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormlyBootstrapFormFieldModule, i3.FormlyModule] });\nFormlyBootstrapInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapInputModule, imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            FormlyBootstrapFormFieldModule,\n            FormlyModule.forChild({\n                types: [\n                    {\n                        name: 'input',\n                        component: FormlyFieldInput,\n                        wrappers: ['form-field'],\n                    },\n                    { name: 'string', extends: 'input' },\n                    {\n                        name: 'number',\n                        extends: 'input',\n                        defaultOptions: {\n                            props: {\n                                type: 'number',\n                            },\n                        },\n                    },\n                    {\n                        name: 'integer',\n                        extends: 'input',\n                        defaultOptions: {\n                            props: {\n                                type: 'number',\n                            },\n                        },\n                    },\n                ],\n            }),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlyBootstrapInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FormlyFieldInput],\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        FormlyBootstrapFormFieldModule,\n                        FormlyModule.forChild({\n                            types: [\n                                {\n                                    name: 'input',\n                                    component: FormlyFieldInput,\n                                    wrappers: ['form-field'],\n                                },\n                                { name: 'string', extends: 'input' },\n                                {\n                                    name: 'number',\n                                    extends: 'input',\n                                    defaultOptions: {\n                                        props: {\n                                            type: 'number',\n                                        },\n                                    },\n                                },\n                                {\n                                    name: 'integer',\n                                    extends: 'input',\n                                    defaultOptions: {\n                                        props: {\n                                            type: 'number',\n                                        },\n                                    },\n                                },\n                            ],\n                        }),\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlyBootstrapInputModule, FormlyFieldInput };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}