{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ngx-formly/core\";\nexport class SectionComponent {\n  constructor(http, baseUrl, route, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.route = route;\n    this.router = router;\n    this.fields2 = [];\n    this.fields = [];\n    this.form = new FormGroup({});\n    this.model = {\n      wynik: ''\n    };\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    http.get(baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\n      this.fields2 = result;\n      this.fields = this.fields2;\n    }, error => console.error(error));\n  }\n  onSubmit(model) {\n    if (this.form.valid) {\n      if (this.id == 2) {\n        console.log(JSON.stringify(this.model));\n        console.log(this.baseUrl + 'Alkohol');\n        this.http.post(this.baseUrl + 'Alkohol', JSON.stringify(this.model)).subscribe(data => {\n          this.wynik2 = data.wynik;\n        });\n        this.pageField = this.form.get('wynik');\n        this.pageField.setValue(this.wynik2);\n      }\n    }\n  }\n}\nSectionComponent.ɵfac = function SectionComponent_Factory(t) {\n  return new (t || SectionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nSectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SectionComponent,\n  selectors: [[\"app-section-component\"]],\n  decls: 4,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [3, \"form\", \"fields\", \"model\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 3, \"disabled\"]],\n  template: function SectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SectionComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit(ctx.model);\n      });\n      i0.ɵɵelement(1, \"formly-form\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵtext(3, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i4.FormlyForm, i3.FormGroupDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAGA,SAASA,SAAS,QAAQ,gBAAgB;;;;;;AAQ1C,OAAM,MAAOC,gBAAgB;EAU3BC,YAAoBC,IAAgB,EAA6BC,OAAe,EAAUC,KAAqB,EAAUC,MAAc;IAAnH,SAAI,GAAJH,IAAI;IAAyC,YAAO,GAAPC,OAAO;IAAkB,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;IARxH,YAAO,GAAoB,EAAE;IAC7B,WAAM,GAAwB,EAAE;IAkBvC,SAAI,GAAG,IAAIN,SAAS,CAAC,EAAE,CAAC;IACxB,UAAK,GAAG;MAACO,KAAK,EAAE;IAAE,CAAC;IAXjB,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACC,EAAE,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACN,MAAM,CAACO,kBAAkB,CAACC,gBAAgB,GAAG,MAAM,KAAK;IAC7DX,IAAI,CAACS,GAAG,CAAkBR,OAAO,GAAG,kBAAkB,GAAG,IAAI,CAACO,EAAE,CAAC,CAACF,SAAS,CAACM,MAAM,IAAG;MACnF,IAAI,CAACC,OAAO,GAAGD,MAAM;MACrB,IAAI,CAACE,MAAM,GAAG,IAAI,CAACD,OAAO;IAC5B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAKAE,QAAQ,CAACC,KAAU;IACjB,IAAI,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACnB,IAAI,IAAI,CAACZ,EAAE,IAAI,CAAC,EAAE;QAChBQ,OAAO,CAACK,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC;QACvCF,OAAO,CAACK,GAAG,CAAC,IAAI,CAACpB,OAAO,GAAG,SAAS,CAAC;QACrC,IAAI,CAACD,IAAI,CAACwB,IAAI,CAAU,IAAI,CAACvB,OAAO,GAAG,SAAS,EAAEqB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC,CAACZ,SAAS,CAACmB,IAAI,IAAG;UAC7F,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACrB,KAAK;QAC1B,CAAC,CAAC;QACF,IAAI,CAACuB,SAAS,GAAG,IAAI,CAACR,IAAI,CAACV,GAAG,CAAC,OAAO,CAAC;QAEvC,IAAI,CAACkB,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACF,MAAM,CAAC;;;EAG1C;;AArCW5B,gBAAgB;mBAAhBA,gBAAgB,4DAUmB,UAAU;AAAA;AAV7CA,gBAAgB;QAAhBA,gBAAgB;EAAA+B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,+BAAsD;MAA7BA;QAAA,OAAYC,uBAAe;MAAA,EAAC;MACnDD,iCAA2E;MAC3EA,iCAAuE;MAAAA,sBAAM;MAAAA,iBAAS;;;MAFlFA,oCAAkB;MACTA,eAAa;MAAbA,+BAAa;MACoBA,eAAwB;MAAxBA,0CAAwB","names":["FormGroup","SectionComponent","constructor","http","baseUrl","route","router","wynik","paramMap","subscribe","params","id","get","routeReuseStrategy","shouldReuseRoute","result","fields2","fields","error","console","onSubmit","model","form","valid","log","JSON","stringify","post","data","wynik2","pageField","setValue","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.ts","C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.html"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-section-component',\r\n  templateUrl: './section.component.html',\r\n})\r\nexport class SectionComponent {\r\n\r\n  public fields2: SectionFields[] = [];\r\n  public fields: FormlyFieldConfig[] = [];\r\n  public pageField: any;\r\n  public wynik2: any\r\n  id: any\r\n  http2: any\r\n  paramsSubscription: any;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') public baseUrl: string, private route: ActivatedRoute, private router: Router) {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.id = params.get('id');\r\n    });\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    http.get<SectionFields[]>(baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\r\n      this.fields2 = result;\r\n      this.fields = this.fields2;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  form = new FormGroup({});\r\n  model = {wynik: ''};\r\n\r\n  onSubmit(model: any) {\r\n    if (this.form.valid) {\r\n      if (this.id == 2) {\r\n        console.log(JSON.stringify(this.model));\r\n        console.log(this.baseUrl + 'Alkohol');\r\n        this.http.post<Alkohol>(this.baseUrl + 'Alkohol', JSON.stringify(this.model)).subscribe(data => {\r\n          this.wynik2 = data.wynik;\r\n        });\r\n        this.pageField = this.form.get('wynik');\r\n\r\n        this.pageField.setValue(this.wynik2);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\ninterface SectionFields {\r\n  key: string;\r\n  type: string;\r\n  templateOptions: TemplateOptions;\r\n}\r\ninterface TemplateOptions {\r\n  type: string;\r\n  label: string;\r\n  placeholder: string;\r\n  required: boolean;\r\n}\r\ninterface Alkohol {\r\n  wynik: number;\r\n}\r\n\r\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit(model)\">\r\n  <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\r\n  <button type=\"submit\" class=\"btn btn-default\" [disabled]=\"!form.valid\">Submit</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}