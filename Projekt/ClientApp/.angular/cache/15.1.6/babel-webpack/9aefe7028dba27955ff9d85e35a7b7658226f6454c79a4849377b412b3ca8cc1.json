{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nlet SectionComponent = class SectionComponent {\n  constructor(http, baseUrl, route, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.route = route;\n    this.router = router;\n    this.fields2 = [];\n    this.fields = [];\n    this.form = new FormGroup({});\n    this.model = {\n      wynik: ''\n    };\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n    });\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    http.get(baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\n      this.fields2 = result;\n      this.fields = this.fields2;\n    }, error => console.error(error));\n  }\n  onSubmit(model) {\n    if (this.form.valid) {\n      if (this.id == 2) {\n        console.log(JSON.stringify(this.model));\n        console.log(this.baseUrl + 'Alkohol');\n        this.http.post(this.baseUrl + 'Alkohol', JSON.stringify(this.model)).subscribe(data => {\n          this.wynik2 = data.wynik;\n        });\n        this.pageField = this.form.get('wynik');\n        this.pageField.setValue(this.wynik2);\n      }\n    }\n  }\n};\nSectionComponent = __decorate([Component({\n  selector: 'app-section-component',\n  templateUrl: './section.component.html'\n}), __param(1, Inject('BASE_URL'))], SectionComponent);\nexport { SectionComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAA2B,eAAe;AAGpE,SAASC,SAAS,QAAQ,gBAAgB;AAQnC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAU3BC,YAAoBC,IAAgB,EAA6BC,OAAe,EAAUC,KAAqB,EAAUC,MAAc;IAAnH,SAAI,GAAJH,IAAI;IAAyC,YAAO,GAAPC,OAAO;IAAkB,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;IARxH,YAAO,GAAoB,EAAE;IAC7B,WAAM,GAAwB,EAAE;IAkBvC,SAAI,GAAG,IAAIN,SAAS,CAAC,EAAE,CAAC;IACxB,UAAK,GAAG;MAACO,KAAK,EAAE;IAAE,CAAC;IAXjB,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC,IAAI,CAACC,EAAE,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF,IAAI,CAACN,MAAM,CAACO,kBAAkB,CAACC,gBAAgB,GAAG,MAAM,KAAK;IAC7DX,IAAI,CAACS,GAAG,CAAkBR,OAAO,GAAG,kBAAkB,GAAG,IAAI,CAACO,EAAE,CAAC,CAACF,SAAS,CAACM,MAAM,IAAG;MACnF,IAAI,CAACC,OAAO,GAAGD,MAAM;MACrB,IAAI,CAACE,MAAM,GAAG,IAAI,CAACD,OAAO;IAC5B,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAKAE,QAAQ,CAACC,KAAU;IACjB,IAAI,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACnB,IAAI,IAAI,CAACZ,EAAE,IAAI,CAAC,EAAE;QAChBQ,OAAO,CAACK,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC;QACvCF,OAAO,CAACK,GAAG,CAAC,IAAI,CAACpB,OAAO,GAAG,SAAS,CAAC;QACrC,IAAI,CAACD,IAAI,CAACwB,IAAI,CAAU,IAAI,CAACvB,OAAO,GAAG,SAAS,EAAEqB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACL,KAAK,CAAC,CAAC,CAACZ,SAAS,CAACmB,IAAI,IAAG;UAC7F,IAAI,CAACC,MAAM,GAAGD,IAAI,CAACrB,KAAK;QAC1B,CAAC,CAAC;QACF,IAAI,CAACuB,SAAS,GAAG,IAAI,CAACR,IAAI,CAACV,GAAG,CAAC,OAAO,CAAC;QAEvC,IAAI,CAACkB,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACF,MAAM,CAAC;;;EAG1C;CACD;AAtCY5B,gBAAgB,eAJ5BH,SAAS,CAAC;EACTkC,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE;CACd,CAAC,EAWuCC,iBAAM,CAAC,UAAU,CAAC,IAV9CjC,gBAAgB,CAsC5B;SAtCYA,gBAAgB","names":["Component","Inject","FormGroup","SectionComponent","constructor","http","baseUrl","route","router","wynik","paramMap","subscribe","params","id","get","routeReuseStrategy","shouldReuseRoute","result","fields2","fields","error","console","onSubmit","model","form","valid","log","JSON","stringify","post","data","wynik2","pageField","setValue","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\tomas\\OneDrive\\Pulpit\\sparwd\\Projekt\\Projekt\\ClientApp\\src\\app\\section\\section.component.ts"],"sourcesContent":["import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormlyFieldConfig } from '@ngx-formly/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-section-component',\r\n  templateUrl: './section.component.html',\r\n})\r\nexport class SectionComponent {\r\n\r\n  public fields2: SectionFields[] = [];\r\n  public fields: FormlyFieldConfig[] = [];\r\n  public pageField: any;\r\n  public wynik2: any\r\n  id: any\r\n  http2: any\r\n  paramsSubscription: any;\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') public baseUrl: string, private route: ActivatedRoute, private router: Router) {\r\n    this.route.paramMap.subscribe(params => {\r\n      this.id = params.get('id');\r\n    });\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    http.get<SectionFields[]>(baseUrl + 'SectionField?id=' + this.id).subscribe(result => {\r\n      this.fields2 = result;\r\n      this.fields = this.fields2;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  form = new FormGroup({});\r\n  model = {wynik: ''};\r\n\r\n  onSubmit(model: any) {\r\n    if (this.form.valid) {\r\n      if (this.id == 2) {\r\n        console.log(JSON.stringify(this.model));\r\n        console.log(this.baseUrl + 'Alkohol');\r\n        this.http.post<Alkohol>(this.baseUrl + 'Alkohol', JSON.stringify(this.model)).subscribe(data => {\r\n          this.wynik2 = data.wynik;\r\n        });\r\n        this.pageField = this.form.get('wynik');\r\n\r\n        this.pageField.setValue(this.wynik2);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\ninterface SectionFields {\r\n  key: string;\r\n  type: string;\r\n  templateOptions: TemplateOptions;\r\n}\r\ninterface TemplateOptions {\r\n  type: string;\r\n  label: string;\r\n  placeholder: string;\r\n  required: boolean;\r\n}\r\ninterface Alkohol {\r\n  wynik: number;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}