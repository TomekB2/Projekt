{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators';\nclass FormlySelectOptionsPipe {\n  transform(options, field) {\n    if (!(options instanceof Observable)) {\n      options = this.observableOf(options, field);\n    } else {\n      this.dispose();\n    }\n    return options.pipe(map(value => this.transformOptions(value, field)));\n  }\n  ngOnDestroy() {\n    this.dispose();\n  }\n  transformOptions(options, field) {\n    const to = this.transformSelectProps(field);\n    const opts = [];\n    const groups = {};\n    options?.forEach(option => {\n      const o = this.transformOption(option, to);\n      if (o.group) {\n        const id = groups[o.label];\n        if (id === undefined) {\n          groups[o.label] = opts.push(o) - 1;\n        } else {\n          o.group.forEach(o => opts[id].group.push(o));\n        }\n      } else {\n        opts.push(o);\n      }\n    });\n    return opts;\n  }\n  transformOption(option, props) {\n    const group = props.groupProp(option);\n    if (Array.isArray(group)) {\n      return {\n        label: props.labelProp(option),\n        group: group.map(opt => this.transformOption(opt, props))\n      };\n    }\n    option = {\n      label: props.labelProp(option),\n      value: props.valueProp(option),\n      disabled: !!props.disabledProp(option)\n    };\n    if (group) {\n      return {\n        label: group,\n        group: [option]\n      };\n    }\n    return option;\n  }\n  transformSelectProps(field) {\n    const props = field?.props || field?.templateOptions || {};\n    const selectPropFn = prop => typeof prop === 'function' ? prop : o => o[prop];\n    return {\n      groupProp: selectPropFn(props.groupProp || 'group'),\n      labelProp: selectPropFn(props.labelProp || 'label'),\n      valueProp: selectPropFn(props.valueProp || 'value'),\n      disabledProp: selectPropFn(props.disabledProp || 'disabled')\n    };\n  }\n  dispose() {\n    if (this._options) {\n      this._options.complete();\n      this._options = null;\n    }\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n      this._subscription = null;\n    }\n  }\n  observableOf(options, f) {\n    this.dispose();\n    if (f && f.options && f.options.fieldChanges) {\n      this._subscription = f.options.fieldChanges.pipe(filter(({\n        property,\n        type,\n        field\n      }) => {\n        return type === 'expressionChanges' && (property.indexOf('templateOptions.options') === 0 || property.indexOf('props.options') === 0) && field === f && Array.isArray(field.props.options) && !!this._options;\n      }), tap(() => this._options.next(f.props.options))).subscribe();\n    }\n    this._options = new BehaviorSubject(options);\n    return this._options.asObservable();\n  }\n}\nFormlySelectOptionsPipe.ɵfac = function FormlySelectOptionsPipe_Factory(t) {\n  return new (t || FormlySelectOptionsPipe)();\n};\nFormlySelectOptionsPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"formlySelectOptions\",\n  type: FormlySelectOptionsPipe,\n  pure: true\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlySelectOptionsPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'formlySelectOptions'\n    }]\n  }], null, null);\n})();\nclass FormlySelectModule {}\nFormlySelectModule.ɵfac = function FormlySelectModule_Factory(t) {\n  return new (t || FormlySelectModule)();\n};\nFormlySelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FormlySelectModule\n});\nFormlySelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FormlySelectModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FormlySelectOptionsPipe],\n      exports: [FormlySelectOptionsPipe]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlySelectModule, FormlySelectOptionsPipe };","map":{"version":3,"names":["i0","Pipe","NgModule","Observable","BehaviorSubject","map","filter","tap","FormlySelectOptionsPipe","transform","options","field","observableOf","dispose","pipe","value","transformOptions","ngOnDestroy","to","transformSelectProps","opts","groups","forEach","option","o","transformOption","group","id","label","undefined","push","props","groupProp","Array","isArray","labelProp","opt","valueProp","disabled","disabledProp","templateOptions","selectPropFn","prop","_options","complete","_subscription","unsubscribe","f","fieldChanges","property","type","indexOf","next","subscribe","asObservable","ɵfac","ɵpipe","args","name","FormlySelectModule","ɵmod","ɵinj","declarations","exports"],"sources":["C:/Users/tomas/OneDrive/Pulpit/sparwd/Projekt/Projekt/ClientApp/node_modules/@ngx-formly/core/fesm2020/ngx-formly-core-select.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, filter, tap } from 'rxjs/operators';\n\nclass FormlySelectOptionsPipe {\n    transform(options, field) {\n        if (!(options instanceof Observable)) {\n            options = this.observableOf(options, field);\n        }\n        else {\n            this.dispose();\n        }\n        return options.pipe(map((value) => this.transformOptions(value, field)));\n    }\n    ngOnDestroy() {\n        this.dispose();\n    }\n    transformOptions(options, field) {\n        const to = this.transformSelectProps(field);\n        const opts = [];\n        const groups = {};\n        options?.forEach((option) => {\n            const o = this.transformOption(option, to);\n            if (o.group) {\n                const id = groups[o.label];\n                if (id === undefined) {\n                    groups[o.label] = opts.push(o) - 1;\n                }\n                else {\n                    o.group.forEach((o) => opts[id].group.push(o));\n                }\n            }\n            else {\n                opts.push(o);\n            }\n        });\n        return opts;\n    }\n    transformOption(option, props) {\n        const group = props.groupProp(option);\n        if (Array.isArray(group)) {\n            return {\n                label: props.labelProp(option),\n                group: group.map((opt) => this.transformOption(opt, props)),\n            };\n        }\n        option = {\n            label: props.labelProp(option),\n            value: props.valueProp(option),\n            disabled: !!props.disabledProp(option),\n        };\n        if (group) {\n            return { label: group, group: [option] };\n        }\n        return option;\n    }\n    transformSelectProps(field) {\n        const props = field?.props || field?.templateOptions || {};\n        const selectPropFn = (prop) => (typeof prop === 'function' ? prop : (o) => o[prop]);\n        return {\n            groupProp: selectPropFn(props.groupProp || 'group'),\n            labelProp: selectPropFn(props.labelProp || 'label'),\n            valueProp: selectPropFn(props.valueProp || 'value'),\n            disabledProp: selectPropFn(props.disabledProp || 'disabled'),\n        };\n    }\n    dispose() {\n        if (this._options) {\n            this._options.complete();\n            this._options = null;\n        }\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n            this._subscription = null;\n        }\n    }\n    observableOf(options, f) {\n        this.dispose();\n        if (f && f.options && f.options.fieldChanges) {\n            this._subscription = f.options.fieldChanges\n                .pipe(filter(({ property, type, field }) => {\n                return (type === 'expressionChanges' &&\n                    (property.indexOf('templateOptions.options') === 0 || property.indexOf('props.options') === 0) &&\n                    field === f &&\n                    Array.isArray(field.props.options) &&\n                    !!this._options);\n            }), tap(() => this._options.next(f.props.options)))\n                .subscribe();\n        }\n        this._options = new BehaviorSubject(options);\n        return this._options.asObservable();\n    }\n}\nFormlySelectOptionsPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectOptionsPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nFormlySelectOptionsPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectOptionsPipe, name: \"formlySelectOptions\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectOptionsPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'formlySelectOptions' }]\n        }] });\n\nclass FormlySelectModule {\n}\nFormlySelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormlySelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectModule, declarations: [FormlySelectOptionsPipe], exports: [FormlySelectOptionsPipe] });\nFormlySelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: FormlySelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [FormlySelectOptionsPipe],\n                    exports: [FormlySelectOptionsPipe],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FormlySelectModule, FormlySelectOptionsPipe };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}